schema2doc
==========
:Author: man-at-home
:Date:   2015-08-28

== summary

schema2doc will be a documentation tool that scans a database structure and emitting documentation (table, columns etc.)
for it in asciidoc. It is not meant as an alternative to front up design documents, but can augment it with documentation about
the current existing database structure.

It works as an command line utility, but my use will be though the provided gradle plugin during a gradle build.

Targeted databases for the first releases are h2 and oracle only.

== planned functionality (near time)

- generate oracle documenation from a live database (sid)
- tables, columns, constraints and others
- basic functionality with h2 and oracle
- generate documentation as asciidoc


== example output

[[img-asciidoc]]
.asciidoc output
image::images/screen.mockdb.asciidoc.png[screenshot_asciidoc, 600, 400]

[[img-html]]
.html generated from asciidoc
image::images/screen.mockdb.html.png[screenshot_html, 600, 400]


== usage

This tool can be used as command line tool or with it's gradle plugin. Possible configuration values see below.

=== command line

[source,cmd,indent=0]
----
schema2doc tool, retrieves database metadata from a db an writes asciidoc docs
with it.

   -c,--connection <url>          jdbc connection string for the db to be
                                  documented.
   -driver <className>            jdbc driver class (fqn) to use
   -h,--help                      command line help
   -o,--out <arg>                 output directory for asciidoc output (default
                                  is stdout/console)
   -p,--password <dbpw>           database password used for connect
   -renderer <implementation>     rendering engine, currently one of: asciidoc
                                  or plaintext
   -scanner <implementation>      one of (currently): Oracle, GenericDb or Mock
   -schema <schemalist>           one or more schema to document, all if empty
   -u,--user <dbuser>             database user used for connect
   -v,--verbose                   verbose output

asciidoc documenation generator for your database
----

Execute above commandline through the _org.manathome.schema2doc.Schema2DocCmd_ class.

=== gradle plugin

[source,groovy,indent=0]
----
buildscript {
    repositories {

    	maven{url "https://dl.bintray.com/man-at-home/maven"}	// <1> hosting for schema2doc binary
		...
	dependencies {
        classpath group: 'org.manathome', name: 'Schema2DocPlugin',
				  version: '0.1.2'

        classpath "com.h2database:h2:1.4.187"               // <2> used database driver, here: h2
		...

apply plugin: "org.manathome.Schema2DocPlugin"

schema2doc {
  // <2> configuring input
  scanner             = "Generic"
  connection          = "jdbc:h2:./schema2doc.test.h2.db"
  driver              = "org.h2.Driver"
  user                = "sa"
  schema              = ["PUBLIC"]

  // <3> configuring output
  renderer            = "asciidoc"
  out                 = "${buildDir}"
}

----
<1> get access to schema2doc library on bintray
<2> include database driver for your database
<3> configure the plugin (how to access the database..)
<4> configure the plugin (where to put the documentation..)

Execute above gradle task with _gradlew schema2doc_.

== development notes

The code for this project (written in java) is hosted at github: https://github.com/man-at-home/schema2doc, 
as is the gradle plugin at https://github.com/man-at-home/schema2doc-plugin (written in groovy). 

Both projects are build with gradle. Notable versions are published on bintray and can so be used as maven or gradle dependency.

Used library dependencies are:

- _slf4j_ with _logback_ for logging
- _commons-cli_ for command line argument parsing
- the relevant jdbc driver suitable for your database


== references

At the moment this tool is in a @pre-alpha state@ and not usefull to third party users.
But the whole thing is not a new idea, so tools with a far longer track record (and maturity) can be found at:

- http://schemaspy.sourceforge.net/
- http://dbdoc.sourceforge.net/
- http://oradoclet.sourceforge.net/
- ...

and commerial, for example

- http://www.red-gate.com/products/sql-development/sql-doc/
- http://documents.software.dell.com/toad-data-modeler/5.2/user-guide/projects-and-models/reports/report-generation/html-rtf-pdf-reports

